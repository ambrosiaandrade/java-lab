exercise1=Thread Creation and Start
exercise2=Race Condition and `synchronized`
exercise3=`AtomicInteger` for Safe Counting
exercise4=`ExecutorService` with `Runnable`
exercise5=`ExecutorService` with `Callable` and `Future`
exercise6=`CountDownLatch` for Startup Synchronization
exercise7=`Semaphore` to Limit Access
exercise8=Basic Chaining with `CompletableFuture`
exercise9=Error Handling with `CompletableFuture`
exercise10=Combining Multiple `CompletableFuture`s
